# Generated by Django 4.2.7 on 2025-09-22 05:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ConversationSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "student_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "student_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "name_response",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("education_response", models.TextField(blank=True, null=True)),
                (
                    "test_score_response",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "budget_response",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "country_response",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "processed_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("processed_education", models.TextField(blank=True, null=True)),
                (
                    "processed_test_score",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "processed_budget",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "processed_country",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("current_step", models.IntegerField(default=1)),
                ("is_completed", models.BooleanField(default=False)),
                ("suggested_universities", models.JSONField(blank=True, default=list)),
                ("data_save_consent", models.BooleanField(default=False)),
                ("counselor_contacted", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "chat_conversations",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="University",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("university_name", models.CharField(max_length=255, unique=True)),
                ("country", models.CharField(max_length=100)),
                ("city", models.CharField(max_length=100)),
                ("tuition", models.CharField(max_length=50)),
                ("ielts_requirement", models.FloatField(blank=True, null=True)),
                ("toefl_requirement", models.IntegerField(blank=True, null=True)),
                ("ranking", models.CharField(blank=True, max_length=20)),
                ("programs", models.JSONField(default=list)),
                ("notes", models.TextField(blank=True)),
                ("affordability", models.CharField(blank=True, max_length=50)),
                ("region", models.CharField(blank=True, max_length=50)),
                ("name_variations", models.JSONField(default=list)),
                ("program_categories", models.JSONField(default=list)),
                ("searchable_text", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "universities",
                "ordering": ["university_name"],
            },
        ),
        migrations.CreateModel(
            name="StudentProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("education_level", models.CharField(max_length=255)),
                ("field_of_study", models.CharField(blank=True, max_length=255)),
                ("gpa_percentage", models.CharField(blank=True, max_length=50)),
                ("test_type", models.CharField(max_length=10)),
                ("test_score", models.CharField(max_length=10)),
                ("budget_amount", models.IntegerField()),
                ("budget_currency", models.CharField(max_length=3)),
                ("preferred_country", models.CharField(max_length=100)),
                ("preferred_programs", models.JSONField(default=list)),
                ("recommended_universities", models.JSONField(default=list)),
                (
                    "contact_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Contact"),
                            ("contacted", "Contacted"),
                            ("in_progress", "Application in Progress"),
                            ("completed", "Application Completed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("counselor_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_counselor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_students",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "conversation",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_profile",
                        to="chat.conversationsession",
                    ),
                ),
            ],
            options={
                "db_table": "student_profiles",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sender",
                    models.CharField(
                        choices=[("bot", "Bot"), ("user", "User")], max_length=4
                    ),
                ),
                ("message_text", models.TextField()),
                ("step_number", models.IntegerField()),
                ("original_input", models.TextField(blank=True, null=True)),
                ("processed_output", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="chat.conversationsession",
                    ),
                ),
            ],
            options={
                "db_table": "chat_messages",
                "ordering": ["timestamp"],
            },
        ),
    ]
