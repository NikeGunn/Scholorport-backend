version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: scholarport_db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-scholarport}
      - POSTGRES_USER=${POSTGRES_USER:-scholarport_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - scholarport_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-scholarport_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scholarport_backend
    restart: unless-stopped
    volumes:
      - ./staticfiles:/app/staticfiles
      - ./logs:/app/logs
      - ./scholorport-firebase-adminsdk-fbsvc-b17f9acfbf.json:/app/scholorport-firebase-adminsdk-fbsvc-b17f9acfbf.json
      - ./data.json:/app/data.json
    env_file:
      - .env
    environment:
      - DJANGO_ENV=production
      - POSTGRES_HOST=db
    depends_on:
      db:
        condition: service_healthy
    networks:
      - scholarport_network
    expose:
      - "8000"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: scholarport_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./staticfiles:/app/staticfiles:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - backend
    networks:
      - scholarport_network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # Certbot for SSL
  certbot:
    image: certbot/certbot
    container_name: scholarport_certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  scholarport_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
